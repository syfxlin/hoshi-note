apiVersion: apps/v1
kind: Deployment
metadata:
  name: hoshi-ums
  namespace: hoshi-note
  labels:
    app: hoshi-ums
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hoshi-ums
  template:
    metadata:
      name: hoshi-ums
      labels:
        app: hoshi-ums
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: hoshi-note
      containers:
        - name: hoshi-ums
          image: ghcr.io/syfxlin/hoshi-note:latest
          imagePullPolicy: IfNotPresent
          command:
            - java
            - -jar
            - /app/hoshi-ums-1.0-SNAPSHOT.jar
          envFrom:
            - secretRef:
                name: hoshi-services
          ports:
            - name: hoshi-ums
              containerPort: 8000
          livenessProbe:
            httpGet:
              port: 8000
              path: /actuator/health/liveness
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              port: 8000
              path: /actuator/health/readiness
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: hoshi-ums
  namespace: hoshi-note
spec:
  selector:
    app: hoshi-ums
  ports:
    - name: hoshi-ums
      port: 8000
  type: ClusterIP
